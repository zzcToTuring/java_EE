定义：
将一个请求封装为一个对象，使发出请求的责任分隔开，这两者之间通过命令对象进行沟通，方便将命令对象进行储存，传递，调用，增加与管理

结构：
抽象命令类：定义命令的接口，声明命令的执行方法
具体命令类：具体的命令实现的接口，通常会有接收者，并调用接收者的功能开完成命令要执行的操作
实现者/接收者：接收者，真正执行命令的对象，任何类都可能成为一个接收者，只要他能够实现命令要求实现的相应的功能
调用者/请求者：要求命令对象执行请求，通常会持有命令对象，可以持有很多命令对象，这是客户端真正触发命令并要求命令执行相应操作的地方，也就是说相当于使用命令对象的入口

优点：
降低系统的耦合度
增加或者删除命令非常方便，采用命令模式增加与删除命令不会影响其他类，他满足“开闭原则”，对扩展比较灵活
可以实现宏命令（命令模式与组合模式结合，将多个命令装配成一个组合命令）

缺点：
使用命令模式可能会导致某些系统有过多的具体命令类（但不会导致类爆炸）
系统结构更加复杂

使用场景：
系统需要将请求调用者和请求接收者解耦，使得调用者和接受者不直接交互
系统需要在不同的时间指定请求，将请求排队和执行请求
系统需要支持命令的撤销操作和恢复操作（在备忘录模式中）