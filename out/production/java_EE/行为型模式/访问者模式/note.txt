定义：
封装一些作用于某些数据结构中的各元素的操作，它可以在不改变这个数据结构的前提下定义作用于这些元素的新操作

定义理解：
提供了提个接口，让他去访问其他元素，即名字叫做访问者

结构：
抽象访问者：案例中的person
具体访问者：案例中的man和women
抽象元素：案例中的action
具体元素：案例中的getmanreault和getwomenresult
对象结构：案例中object....

优点：
扩展性好：在不修改对象结构中的元素的情况下，为对象结构中的元素添加新的功能
复用性好：通过访问者来定义整个对象结构通用的功能，从而提高复用程度
分离无关行为：通过访问者来分离无关的行为，把相关行为封装在一起，构成一个访问者，这样每个访问者的功能都比较单一

缺点：
对象结构变化分困难：在访问者模式中每增加一个新的元素类，都要在每一个具体访问者类中增加相应操作，违背了“开闭原则”
违法了依赖倒置原则：访问者模式依赖了具体类，而没有依赖抽象类

使用场景：
对象结构相对稳定，但其操作算法经常变化的程序
对象结构中的对象需要提供多种不同且不相关的操作，而且要避免让这些操作的变化影响对象的结构
tip：相比于其他的设计结构而言，这个设计结构用的场景还是不多