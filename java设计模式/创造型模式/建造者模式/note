建造者实现了部件的分离，可以将部件和组装过程分开，一步一步创建一个复杂的对象
用户只需指定复杂对象的类型就能得到该对象，而无需知道其内部的具体构造细节
优点：
建造者模式的封装性好，可以有效的封装，在使用建造者模式的场景中，一般产品类和建造者类是比较稳定的
因此，将业务的逻辑封装在指挥者类中对整体而言可以获得比较完好的稳定向
在建造者模式中，客服端不必知道产品内部的细节，可以更加精细的控制产品的创建过程
将复杂产品的创建步骤分解在不同的方法中，使得创建过程更加清晰
缺点：
建造者模式所创造的产品一般具有较多的共同点，其组成部分类似，如果产品之间的差异很大
则不适合使用建造者模式
使用场景：
创建的是复杂对象，其产品的各个部分经常面临剧烈的变化，但将他们组合在一起的算法却相对稳定，所以它在一下场所使用
创建的对象比较复杂，由多个部件构成，各部件面临着复杂的变化，但构建间的建造顺序是稳定的
创建复杂对象的算法独立于该对象的组成以及他们的配装方式，及产品的构建过程和最终的表示是独立的


