定义：
观察者模式又称发布订阅模式，他定义了一种一对多的依赖关系，让多个观察者同时监听某一个主题对象
这个主题对象在发生变化的时候，会通知所有的观察者对象，使得他们能够更新自己

结构：
抽象主题：抽象主题把所有观察者对象保存在一个集合里面，每个主题都可以有任意数量的观察者
抽象主题对象提供一个接口，可以增加和删除观察者对象
具体主题：该角色将有关状态存入具体观察者对象，在具体主题内部状态发生改变的时候，给所有注册过的观察者发送通知
抽象观察者：是观察者的抽象类，他定义了一个更新接口，使得在得到主题更改通知时更新自己
具体观察者：实现抽象观察者定义的更新接口，以便在得到主题更改通知的时候更新自己的状态

案例-微信公众号更新案例：
微信公众号属于主题类，关注微信公众号的用户属于观察者对象，当微信公众号进行更新的时候
所有的微信用户（观察者）都会收到通知

优点：
降低了目标与观察者之间的耦合关系，两者之间是抽奖耦合关系
被观察者发送通知，所有注册的观察者都会收到信息【可以实现广播机制】

缺点：
如果观察者非常多的话，那么所有的观察者抽到被观察者发送的通知会耗时间
如果被观察者有循环依赖的话，那么被观察者发送通知会使得观察者循环调用，会导致系统崩溃

使用场景：
对象存在一对多关系，一个对象的状态发生改变会影响其他对象
当一个抽象模型有两个方面，其中一个方面依赖另一方面时