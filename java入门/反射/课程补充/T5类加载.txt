反射机制是java实现动态语言的关键，也就是通过反射实现类动态加载
    1.静态加载:编译时加载相关的类，如果没有则报错，依赖性太强
    2.动态加载:运行时加载需要的类，如果运行时不用该类，即使不存在该类，则不报错，降低了依赖性举例说明
类加载时机
    当创建对象时 (new) //静态加载
    当子类被加载时，父类也加载 //静态加载
    调用类中的静态成员时 //静态加载
    通过反射 //动态加载

举例：
    用A类和B类创建a,b对象
    a用反射创建====>动态代理，b直接创建====>静态代理
    那么，当A,B均不存在时(忽略idea的提醒)
    a能通过编译--->但在运行的时候会报错（如果a在if里面且没有执行，也不会报错的）
    b不能通过编译
    ===》展示出静态代理与动态代理的区别
